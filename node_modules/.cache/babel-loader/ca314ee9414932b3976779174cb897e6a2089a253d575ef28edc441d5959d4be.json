{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useCartData.js\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst useCartData = isOpen => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCartData = async () => {\n      try {\n        var _response$data, _response$data2;\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          throw new Error(\"User is not logged in.\");\n        }\n        const response = await axios.get(\"https://ram.freelogomaker.in/api/order\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const cartData = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.cart) || [];\n        const cartProducts = ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.cartproduct) || [];\n        const mergedCartItems = cartData.map(cartItem => {\n          const product = cartProducts.find(product => product.id === cartItem.product_id);\n          return product ? {\n            ...cartItem,\n            ...product\n          } : null;\n        }).filter(Boolean);\n        setCartItems(mergedCartItems);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    if (isOpen) {\n      fetchCartData();\n    }\n  }, [isOpen]);\n  return {\n    cartItems,\n    loading,\n    error\n  };\n};\n_s(useCartData, \"Nhl6754Vv5n7zqtw1vwEEsufFGw=\");\nexport default useCartData;","map":{"version":3,"names":["useState","useEffect","axios","useCartData","isOpen","_s","cartItems","setCartItems","loading","setLoading","error","setError","fetchCartData","_response$data","_response$data2","token","localStorage","getItem","Error","response","get","headers","Authorization","cartData","data","cart","cartProducts","cartproduct","mergedCartItems","map","cartItem","product","find","id","product_id","filter","Boolean","message"],"sources":["C:/Users/Ram/Desktop/React/Projects/React_shoping_cart/src/Shoping_cart/Fetch/Orders.js"],"sourcesContent":["// src/hooks/useCartData.js\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useCartData = (isOpen) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCartData = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        if (!token) {\r\n          throw new Error(\"User is not logged in.\");\r\n        }\r\n\r\n        const response = await axios.get(\"https://ram.freelogomaker.in/api/order\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        const cartData = response.data?.cart || [];\r\n        const cartProducts = response.data?.cartproduct || [];\r\n\r\n        const mergedCartItems = cartData.map((cartItem) => {\r\n          const product = cartProducts.find((product) => product.id === cartItem.product_id);\r\n          return product ? { ...cartItem, ...product } : null;\r\n        }).filter(Boolean);\r\n\r\n        setCartItems(mergedCartItems);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      fetchCartData();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return { cartItems, loading, error };\r\n};\r\n\r\nexport default useCartData;\r\n"],"mappings":";AAAA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAIC,MAAM,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QAAA,IAAAC,cAAA,EAAAC,eAAA;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAE3C,IAAI,CAACF,KAAK,EAAE;UACV,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;QAC3C;QAEA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,wCAAwC,EAAE;UACzEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK;UAChC;QACF,CAAC,CAAC;QAEF,MAAMQ,QAAQ,GAAG,EAAAV,cAAA,GAAAM,QAAQ,CAACK,IAAI,cAAAX,cAAA,uBAAbA,cAAA,CAAeY,IAAI,KAAI,EAAE;QAC1C,MAAMC,YAAY,GAAG,EAAAZ,eAAA,GAAAK,QAAQ,CAACK,IAAI,cAAAV,eAAA,uBAAbA,eAAA,CAAea,WAAW,KAAI,EAAE;QAErD,MAAMC,eAAe,GAAGL,QAAQ,CAACM,GAAG,CAAEC,QAAQ,IAAK;UACjD,MAAMC,OAAO,GAAGL,YAAY,CAACM,IAAI,CAAED,OAAO,IAAKA,OAAO,CAACE,EAAE,KAAKH,QAAQ,CAACI,UAAU,CAAC;UAClF,OAAOH,OAAO,GAAG;YAAE,GAAGD,QAAQ;YAAE,GAAGC;UAAQ,CAAC,GAAG,IAAI;QACrD,CAAC,CAAC,CAACI,MAAM,CAACC,OAAO,CAAC;QAElB7B,YAAY,CAACqB,eAAe,CAAC;QAC7BnB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAAC2B,OAAO,CAAC;QACvB5B,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,IAAIL,MAAM,EAAE;MACVQ,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,OAAO;IAAEE,SAAS;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACtC,CAAC;AAACL,EAAA,CA1CIF,WAAW;AA4CjB,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}