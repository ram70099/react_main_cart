{"ast":null,"code":"import{useState,useEffect}from\"react\";import axios from\"axios\";const useCartData=isOpen=>{const[cartItems,setCartItems]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{if(!isOpen)return;// Avoid unnecessary API calls when modal is closed\nconst fetchCartData=async()=>{setLoading(true);setError(null);try{var _response$data,_response$data2;const token=localStorage.getItem(\"token\");if(!token){throw new Error(\"User is not logged in.\");}const response=await axios.get(\"https://ram.freelogomaker.in/api/order\",{headers:{Authorization:`Bearer ${token}`}});const cartData=((_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.cart)||[];const cartProducts=((_response$data2=response.data)===null||_response$data2===void 0?void 0:_response$data2.cartproduct)||[];// Merge cart items with product details\nconst mergedCartItems=cartData.map(cartItem=>{const product=cartProducts.find(p=>p.id===cartItem.product_id);return product?{...cartItem,...product}:null;}).filter(Boolean);// Remove null values\nsetCartItems(mergedCartItems);}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||err.message);console.error(\"Error fetching cart data:\",err);}finally{setLoading(false);}};fetchCartData();},[isOpen]);return{cartItems,loading,error};};export default useCartData;","map":{"version":3,"names":["useState","useEffect","axios","useCartData","isOpen","cartItems","setCartItems","loading","setLoading","error","setError","fetchCartData","_response$data","_response$data2","token","localStorage","getItem","Error","response","get","headers","Authorization","cartData","data","cart","cartProducts","cartproduct","mergedCartItems","map","cartItem","product","find","p","id","product_id","filter","Boolean","err","_err$response","_err$response$data","message","console"],"sources":["C:/Users/Ram/Desktop/React/Projects/React_shoping_cart/src/Shoping_cart/Fetch/Order.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useCartData = (isOpen) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return; // Avoid unnecessary API calls when modal is closed\r\n\r\n    const fetchCartData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        if (!token) {\r\n          throw new Error(\"User is not logged in.\");\r\n        }\r\n\r\n        const response = await axios.get(\"https://ram.freelogomaker.in/api/order\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        const cartData = response.data?.cart || [];\r\n        const cartProducts = response.data?.cartproduct || [];\r\n\r\n        // Merge cart items with product details\r\n        const mergedCartItems = cartData\r\n          .map((cartItem) => {\r\n            const product = cartProducts.find((p) => p.id === cartItem.product_id);\r\n            return product ? { ...cartItem, ...product } : null;\r\n          })\r\n          .filter(Boolean); // Remove null values\r\n\r\n        setCartItems(mergedCartItems);\r\n      } catch (err) {\r\n        setError(err.response?.data?.message || err.message);\r\n        console.error(\"Error fetching cart data:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCartData();\r\n  }, [isOpen]);\r\n\r\n  return { cartItems, loading, error };\r\n};\r\n\r\nexport default useCartData;\r\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,WAAW,CAAIC,MAAM,EAAK,CAC9B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACO,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACS,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACd,GAAI,CAACG,MAAM,CAAE,OAAQ;AAErB,KAAM,CAAAO,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChCH,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd,GAAI,KAAAE,cAAA,CAAAC,eAAA,CACF,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAI,CAACF,KAAK,CAAE,CACV,KAAM,IAAI,CAAAG,KAAK,CAAC,wBAAwB,CAAC,CAC3C,CAEA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAhB,KAAK,CAACiB,GAAG,CAAC,wCAAwC,CAAE,CACzEC,OAAO,CAAE,CAAEC,aAAa,CAAE,UAAUP,KAAK,EAAG,CAC9C,CAAC,CAAC,CAEF,KAAM,CAAAQ,QAAQ,CAAG,EAAAV,cAAA,CAAAM,QAAQ,CAACK,IAAI,UAAAX,cAAA,iBAAbA,cAAA,CAAeY,IAAI,GAAI,EAAE,CAC1C,KAAM,CAAAC,YAAY,CAAG,EAAAZ,eAAA,CAAAK,QAAQ,CAACK,IAAI,UAAAV,eAAA,iBAAbA,eAAA,CAAea,WAAW,GAAI,EAAE,CAErD;AACA,KAAM,CAAAC,eAAe,CAAGL,QAAQ,CAC7BM,GAAG,CAAEC,QAAQ,EAAK,CACjB,KAAM,CAAAC,OAAO,CAAGL,YAAY,CAACM,IAAI,CAAEC,CAAC,EAAKA,CAAC,CAACC,EAAE,GAAKJ,QAAQ,CAACK,UAAU,CAAC,CACtE,MAAO,CAAAJ,OAAO,CAAG,CAAE,GAAGD,QAAQ,CAAE,GAAGC,OAAQ,CAAC,CAAG,IAAI,CACrD,CAAC,CAAC,CACDK,MAAM,CAACC,OAAO,CAAC,CAAE;AAEpB9B,YAAY,CAACqB,eAAe,CAAC,CAC/B,CAAE,MAAOU,GAAG,CAAE,KAAAC,aAAA,CAAAC,kBAAA,CACZ7B,QAAQ,CAAC,EAAA4B,aAAA,CAAAD,GAAG,CAACnB,QAAQ,UAAAoB,aAAA,kBAAAC,kBAAA,CAAZD,aAAA,CAAcf,IAAI,UAAAgB,kBAAA,iBAAlBA,kBAAA,CAAoBC,OAAO,GAAIH,GAAG,CAACG,OAAO,CAAC,CACpDC,OAAO,CAAChC,KAAK,CAAC,2BAA2B,CAAE4B,GAAG,CAAC,CACjD,CAAC,OAAS,CACR7B,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDG,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,CAACP,MAAM,CAAC,CAAC,CAEZ,MAAO,CAAEC,SAAS,CAAEE,OAAO,CAAEE,KAAM,CAAC,CACtC,CAAC,CAED,cAAe,CAAAN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}