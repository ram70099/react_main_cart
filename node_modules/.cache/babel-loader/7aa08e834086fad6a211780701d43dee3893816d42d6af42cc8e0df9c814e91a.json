{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst useCartData = isOpen => {\n  _s();\n  const {\n    cartItems,\n    loading,\n    error\n  } = useCartData(isOpen);\n  useEffect(() => {\n    if (!isOpen) return; // Avoid unnecessary API calls when modal is closed\n\n    const fetchCartData = async () => {\n      setLoading(true);\n      setError(null); // Reset error state before fetching\n\n      try {\n        var _response$data, _response$data2;\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          throw new Error(\"User is not logged in.\");\n        }\n        const response = await axios.get(\"https://ram.freelogomaker.in/api/order\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const cartData = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.cart) || [];\n        const cartProducts = ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.cartproduct) || [];\n\n        // Merge cart items with product details\n        const mergedCartItems = cartData.map(cartItem => {\n          const product = cartProducts.find(p => p.id === cartItem.product_id);\n          return product ? {\n            ...cartItem,\n            ...product\n          } : null;\n        }).filter(Boolean); // Remove null values\n\n        setCartItems(mergedCartItems);\n        console.log(mergedCartItems);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message); // Handle API errors\n        console.error(\"Error fetching cart data:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCartData();\n  }, [isOpen]); // Runs only when `isOpen` changes\n\n  return {\n    cartItems,\n    loading,\n    error\n  };\n};\n_s(useCartData, \"e/SyAZxML3jYBjf6XkhzECpyzsI=\", false, function () {\n  return [useCartData];\n});\nexport default useCartData;","map":{"version":3,"names":["useState","useEffect","axios","useCartData","isOpen","_s","cartItems","loading","error","fetchCartData","setLoading","setError","_response$data","_response$data2","token","localStorage","getItem","Error","response","get","headers","Authorization","cartData","data","cart","cartProducts","cartproduct","mergedCartItems","map","cartItem","product","find","p","id","product_id","filter","Boolean","setCartItems","console","log","err","_err$response","_err$response$data","message"],"sources":["C:/Users/Ram/Desktop/React/Projects/React_shoping_cart/src/Shoping_cart/Fetch/Order.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useCartData = (isOpen) => {\r\n    const { cartItems, loading, error } = useCartData(isOpen);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return; // Avoid unnecessary API calls when modal is closed\r\n\r\n    const fetchCartData = async () => {\r\n      setLoading(true);\r\n      setError(null); // Reset error state before fetching\r\n\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        if (!token) {\r\n          throw new Error(\"User is not logged in.\");\r\n        }\r\n\r\n        const response = await axios.get(\"https://ram.freelogomaker.in/api/order\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        const cartData = response.data?.cart || [];\r\n        const cartProducts = response.data?.cartproduct || [];\r\n\r\n        // Merge cart items with product details\r\n        const mergedCartItems = cartData.map((cartItem) => {\r\n          const product = cartProducts.find((p) => p.id === cartItem.product_id);\r\n          return product ? { ...cartItem, ...product } : null;\r\n        }).filter(Boolean); // Remove null values\r\n\r\n        setCartItems(mergedCartItems);\r\n        console.log(mergedCartItems);\r\n      } catch (err) {\r\n        setError(err.response?.data?.message || err.message); // Handle API errors\r\n        console.error(\"Error fetching cart data:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCartData();\r\n  }, [isOpen]); // Runs only when `isOpen` changes\r\n\r\n  return { cartItems, loading, error };\r\n};\r\n\r\nexport default useCartData;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAIC,MAAM,IAAK;EAAAC,EAAA;EAC5B,MAAM;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGL,WAAW,CAACC,MAAM,CAAC;EAG3DH,SAAS,CAAC,MAAM;IACd,IAAI,CAACG,MAAM,EAAE,OAAO,CAAC;;IAErB,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChCC,UAAU,CAAC,IAAI,CAAC;MAChBC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEhB,IAAI;QAAA,IAAAC,cAAA,EAAAC,eAAA;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAE3C,IAAI,CAACF,KAAK,EAAE;UACV,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;QAC3C;QAEA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,wCAAwC,EAAE;UACzEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG;QAC9C,CAAC,CAAC;QAEF,MAAMQ,QAAQ,GAAG,EAAAV,cAAA,GAAAM,QAAQ,CAACK,IAAI,cAAAX,cAAA,uBAAbA,cAAA,CAAeY,IAAI,KAAI,EAAE;QAC1C,MAAMC,YAAY,GAAG,EAAAZ,eAAA,GAAAK,QAAQ,CAACK,IAAI,cAAAV,eAAA,uBAAbA,eAAA,CAAea,WAAW,KAAI,EAAE;;QAErD;QACA,MAAMC,eAAe,GAAGL,QAAQ,CAACM,GAAG,CAAEC,QAAQ,IAAK;UACjD,MAAMC,OAAO,GAAGL,YAAY,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,QAAQ,CAACK,UAAU,CAAC;UACtE,OAAOJ,OAAO,GAAG;YAAE,GAAGD,QAAQ;YAAE,GAAGC;UAAQ,CAAC,GAAG,IAAI;QACrD,CAAC,CAAC,CAACK,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;;QAEpBC,YAAY,CAACV,eAAe,CAAC;QAC7BW,OAAO,CAACC,GAAG,CAACZ,eAAe,CAAC;MAC9B,CAAC,CAAC,OAAOa,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACZ/B,QAAQ,CAAC,EAAA8B,aAAA,GAAAD,GAAG,CAACtB,QAAQ,cAAAuB,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAclB,IAAI,cAAAmB,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAIH,GAAG,CAACG,OAAO,CAAC,CAAC,CAAC;QACtDL,OAAO,CAAC9B,KAAK,CAAC,2BAA2B,EAAEgC,GAAG,CAAC;MACjD,CAAC,SAAS;QACR9B,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDD,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd,OAAO;IAAEE,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC;AACtC,CAAC;AAACH,EAAA,CA7CIF,WAAW;EAAA,QACyBA,WAAW;AAAA;AA8CrD,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}