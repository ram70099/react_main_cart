{"ast":null,"code":"// src/hooks/useCart.js\nimport{useState,useEffect}from'react';import axios from'axios';const useCart=()=>{const[cartItems,setCartItems]=useState([]);const[orderItemsCount,setOrderItemsCount]=useState(0);const[loading,setLoading]=useState(true);useEffect(()=>{// Fetch Cart Items and Order Count\nconst fetchCartItems=async()=>{try{const token=localStorage.getItem('token');if(!token){console.error('User is not logged in.');return;}const response=await axios.get('https://ram.freelogomaker.in/api/cart/show',{headers:{Authorization:`Bearer ${token}`}});setCartItems(response.data.cartproducts);setOrderItemsCount(response.data.orderCount);// Store the count values in localStorage\nlocalStorage.setItem('count',response.data.cartproducts.length);localStorage.setItem('order',response.data.orderCount.length);}catch(error){console.error('Error fetching cart items:',error);}finally{setLoading(false);}};fetchCartItems();},[]);// Empty dependency array ensures it runs once when the component mounts\n// Return the necessary state values\nreturn{cartItems,orderItemsCount,loading};};export default useCart;","map":{"version":3,"names":["useState","useEffect","axios","useCart","cartItems","setCartItems","orderItemsCount","setOrderItemsCount","loading","setLoading","fetchCartItems","token","localStorage","getItem","console","error","response","get","headers","Authorization","data","cartproducts","orderCount","setItem","length"],"sources":["C:/Users/Ram/Desktop/React/Projects/React_shoping_cart/src/Shoping_cart/Fetch/Count.js"],"sourcesContent":["// src/hooks/useCart.js\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useCart = () => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [orderItemsCount, setOrderItemsCount] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch Cart Items and Order Count\r\n    const fetchCartItems = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if (!token) {\r\n          console.error('User is not logged in.');\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get('https://ram.freelogomaker.in/api/cart/show', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        setCartItems(response.data.cartproducts);\r\n        setOrderItemsCount(response.data.orderCount);\r\n\r\n        // Store the count values in localStorage\r\n        localStorage.setItem('count', response.data.cartproducts.length);\r\n        localStorage.setItem('order', response.data.orderCount.length);\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching cart items:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCartItems();\r\n  }, []); // Empty dependency array ensures it runs once when the component mounts\r\n\r\n  // Return the necessary state values\r\n  return { cartItems, orderItemsCount, loading };\r\n};\r\n\r\nexport default useCart;\r\n"],"mappings":"AAAA;AACA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGL,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACM,eAAe,CAAEC,kBAAkB,CAAC,CAAGP,QAAQ,CAAC,CAAC,CAAC,CACzD,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAS,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAI,CAACF,KAAK,CAAE,CACVG,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC,CACvC,OACF,CAEA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACe,GAAG,CAAC,4CAA4C,CAAE,CAC7EC,OAAO,CAAE,CACPC,aAAa,CAAE,UAAUR,KAAK,EAChC,CACF,CAAC,CAAC,CAEFN,YAAY,CAACW,QAAQ,CAACI,IAAI,CAACC,YAAY,CAAC,CACxCd,kBAAkB,CAACS,QAAQ,CAACI,IAAI,CAACE,UAAU,CAAC,CAE5C;AACAV,YAAY,CAACW,OAAO,CAAC,OAAO,CAAEP,QAAQ,CAACI,IAAI,CAACC,YAAY,CAACG,MAAM,CAAC,CAChEZ,YAAY,CAACW,OAAO,CAAC,OAAO,CAAEP,QAAQ,CAACI,IAAI,CAACE,UAAU,CAACE,MAAM,CAAC,CAEhE,CAAE,MAAOT,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACpD,CAAC,OAAS,CACRN,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAAE;AAER;AACA,MAAO,CAAEN,SAAS,CAAEE,eAAe,CAAEE,OAAQ,CAAC,CAChD,CAAC,CAED,cAAe,CAAAL,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}